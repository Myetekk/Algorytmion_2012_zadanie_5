public class Algorytm_backup {
    int[] tab = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0};
//    String[] tab = {"1",  "2",  "3",  "4",
//                    "5",  "6",  "7",  "8",
//                    "9", "10", "11", "12",
//                    "13", "14", "15",  "0"};

    public void wypisz() {
        for(int i = 0; i<16; i++){
            System.out.print(tab[i] + " ");
            if (tab[i] < 10) System.out.print(" ");
            if ((i+1)%4 == 0) System.out.println();
        }
        System.out.println();
    }

    public Algorytm_backup(){
        int index = 15, prev = 4, prevprev =4, prev_index = 15, count = 0, r = 0;

        while (count < 150){
            boolean git = false;
            while (!git){
                git = true;
                r = (int)(Math.random() * 4);
                if (r != prev  &&  r == prevprev) prevprev = 4;
                if (r == prevprev) git = false;
                if ((r+2)%4 == prev) git = false;
//                System.out.println(r);

                if (git){
                    prev_index = index;
                    switch (r) {
                        case 0:  // w lewo
                            if (index != 0 && index != 4 && index != 8 && index != 12) index -= 1;
                            else git = false;
                            break;
                        case 1:  // w gore
                            if (index != 0 && index != 1 && index != 2 && index != 3) index -= 4;
                            else git = false;
                            break;
                        case 2:  // w prawo
                            if (index != 3 && index != 7 && index != 11 && index != 15) index += 1;
                            else git = false;
                            break;
                        case 3:  // w dol
                            if (index != 12 && index != 13 && index != 14 && index != 15) index += 4;
                            else git = false;
                            break;
                    }
                    if (git){
                        int temp = tab[prev_index];
                        tab[prev_index] = tab[index];
                        tab[index] = temp;
                    }
                }
            }
            prevprev = prev;
            prev = r;
            count++;

//            wypisz();
        }
        wypisz();
    }
}
